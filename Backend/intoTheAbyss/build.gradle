buildscript {
	ext {
		//gradleDockerVersion = "1.2"
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		//classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.4.RELEASE")
		//classpath("se.transmode.gradle:gradle-docker:${gradleDockerVersion}")
	}
}

plugins {
    id "com.adarshr.test-logger" version "1.6.0"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

version = '0.0.1'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	jcenter()
}

jar {
    baseName = "IntoTheAbyss"
    group    = "com.intotheabyss"
    version  = "0.0.1-SNAPSHOT"
}

dependencies {
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-thymeleaf")
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile("org.springframework.boot:spring-boot-devtools")
	compile("com.esotericsoftware:kryonet:2.22.0-RC1")
	compile("mysql:mysql-connector-java")
	compile("org.mockito:mockito-core:2.+")
	compile('org.junit.jupiter:junit-jupiter-api:5.4.0')
	compile('org.springframework.boot:spring-boot-starter')
	
    testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile("org.mockito:mockito-core:2.+")
	testCompile('org.junit.jupiter:junit-jupiter-api:5.4.0')
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.4.0")
	
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
}



sourceSets {
	main {
		java {
			srcDirs = ['src']
		}
	}
	test{
		java {
			srcDirs = ['src/test/java']
		}
	}
}